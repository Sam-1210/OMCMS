{"version":3,"sources":["components/AuthContext.jsx","components/GlobalHeader.jsx","components/home.jsx","components/Login.jsx","media/contact.png","components/Dashboards/DasboardAdmin.jsx","components/Dashboards/DasboardStaff.jsx","components/Dashboards/DasboardMember.jsx","components/DashboardSelector.jsx","components/Tools.jsx","components/About.jsx","components/Register.jsx","components/MyAccount.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","Axios","axios","create","baseURL","AuthContextProvider","state","showLogin","isAuth","theUser","logoutUser","localStorage","removeItem","setState","registerUser","user","a","post","fname","lname","email","password","authority","register","data","console","log","success","message","loginUser","login","token","isLoggedIn","loginToken","getItem","defaults","headers","common","get","GetOrganisationName","Name","organisation_name","Email","organisation_email","ChangeName","UserName","this","contextValue","rootState","Provider","value","props","children","Component","HandleClick","MenuButton","document","getElementById","BlankArea","NavBar","className","HandleLogRegClick","ID","LogRegPane","LoginRegPane","useContext","id","CompId","to","onClick","e","stopPropagation","GlobalHeader","window","location","href","replace","substr","lastIndexOf","onMouseEnter","onMouseLeave","Home","Login","initialState","userInfo","errorMsg","successMsg","useState","onChangeValue","target","name","submitForm","event","preventDefault","setItem","onSubmit","noValidate","htmlFor","type","required","placeholder","onChange","DashboardAdmin","org_name","logs","errMsg","scsMsg","staff_info","GetStaffDetails","Org","Payload","context","then","StaffInfo","i","staffMem","StaffInfoPalette","rel","src","ContactIco","alt","length","push","contextType","NewEvent","EventInfo","EvntID","EvntTitle","EvntLink","AddEventDetails","EvntInfo","SubmitEventDetails","handle","DashboardStaff","org_email","events_list","childCallback","GetEventsList","theOrganisation","EventList","link","substring","EventPalette","title","s_id","e_id","AddEvent","OrgnrID","DashboardMember","DashboardSelector","UserType","Tools","About","Register","setTimeout","PageURL","defaultValue","disabled","hidden","MyAccount","changed_fname","changed_lname","changed_password","changed_confirm_password","update_org_name","update_org_email","SetOrganisationName","OrgName","UpdateLog","submitChangeOrgName","SetOrganisationEmail","OrgEmail","submitChangeOrgEmail","SetNewPassword","Req","Password","ConfrimPassword","confirmPassword","submitChangePassword","submitChangeName","OtherElements","MainContainer","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0e98a95c.chunk.js","sourcesContent":["import React, { createContext,Component } from \"react\";\r\nimport axios from 'axios'\r\nexport const AuthContext = createContext();\r\n\r\nconst Axios = axios.create({ \r\n    baseURL: 'http://localhost/omcms-server/',\r\n});\r\n\r\nclass AuthContextProvider extends Component{\r\n    state = {\r\n        showLogin:true,\r\n        isAuth:false,\r\n        theUser:null,\r\n    }\r\n\r\n    /*constructor()\r\n    {\r\n        super();\r\n    }*/\r\n\r\n    componentDidMount()\r\n    {\r\n        this.isLoggedIn();\r\n    }\r\n\r\n    logoutUser = () => {\r\n        localStorage.removeItem('loginToken');\r\n        this.setState({\r\n            ...this.state,\r\n            isAuth:false\r\n        })\r\n    }\r\n\r\n    registerUser = async (user) => {\r\n        try\r\n        {\r\n            const register = await Axios.post('Register.php',{\r\n                fname:user.fname,\r\n                lname:user.lname,\r\n                email:user.email,\r\n                password:user.password,\r\n                authority:user.authority, \r\n            });\r\n            return register.data;\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            return {success:false, message:\"Server Connection Failed\"};\r\n        }\r\n    }\r\n\r\n\r\n    loginUser = async (user) => {\r\n        try\r\n        {\r\n            const login = await Axios.post('Login.php',{\r\n                email:user.email,\r\n                password:user.password\r\n            });\r\n            return login.data;\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            return {success:false, token:null, message:\"Server Connection Failed\"};\r\n        }\r\n    }\r\n\r\n    isLoggedIn = async () => {\r\n        const loginToken = localStorage.getItem('loginToken');\r\n\r\n        if(loginToken)\r\n        {\r\n            Axios.defaults.headers.common['Authorization'] = 'bearer '+loginToken;\r\n            try \r\n            {\r\n                const {data} = await Axios.get('AccountInfo.php');\r\n\r\n                if(data.success && data.user)\r\n                {\r\n                    this.setState({\r\n                        ...this.state,\r\n                        isAuth:true,\r\n                        theUser:data.user\r\n                    });\r\n                }\r\n            \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    GetOrganisationName = async () => {\r\n        const loginToken = localStorage.getItem('loginToken');\r\n        if(loginToken)\r\n        {\r\n            try\r\n            {\r\n                Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken;\r\n                const {data}= await Axios.get('Getters/GetOrgName.php');\r\n                return {Name:data.organisation_name, Email:data.organisation_email};\r\n            }\r\n            catch(error)\r\n            {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n\r\n    ChangeName = async (UserName) => {\r\n        try\r\n        {\r\n            const {data} = await Axios.post('Setters/ChangeName.php',{\r\n                fname: UserName.fname,\r\n                lname: UserName.lname\r\n            });\r\n\r\n            if(data.success)\r\n            {\r\n                this.setState({\r\n                    ...this.state,\r\n                    theUser:{\r\n                        ...this.state.theUser,\r\n                        fname: UserName.fname,\r\n                        lname: UserName.lname\r\n                    }\r\n                });\r\n            }\r\n            return data;\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            return {success:false, token:null, message:\"Server Connection Failed\"};\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const contextValue = {\r\n            rootState:this.state,\r\n            isLoggedIn:this.isLoggedIn,\r\n            registerUser:this.registerUser,\r\n            loginUser:this.loginUser,\r\n            logoutUser:this.logoutUser,\r\n            GetOrganisationName:this.GetOrganisationName,\r\n            ChangeName:this.ChangeName\r\n        }\r\n        return(\r\n            <AuthContext.Provider value={contextValue}>\r\n                {this.props.children}\r\n            </AuthContext.Provider>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AuthContextProvider;","import React, {useContext} from 'react'\r\nimport {NavLink} from \"react-router-dom\"\r\nimport { AuthContext } from \"./AuthContext.jsx\";\r\nimport \"./Styles/GlobalHeader.css\"\r\n\r\nfunction HandleClick()\r\n{\r\n    let MenuButton = document.getElementById(\"DrawerButton\");\r\n    let BlankArea = document.getElementById(\"NavCloseArea\");\r\n    let NavBar = document.getElementById(\"GlobalNav\");\r\n        if(NavBar.className === \"WebNav\")\r\n        {\r\n            BlankArea.className = \"AreaVisible\"\r\n            NavBar.className += \" MobileMenu\";\r\n            MenuButton.className += \" MenuButtonClicked\";\r\n        }\r\n        else\r\n        {\r\n            BlankArea.className = \"AreaHidden\"\r\n            NavBar.className = \"WebNav\";\r\n            MenuButton.className = \"MenuButton\";\r\n        }\r\n}\r\n\r\nfunction HandleLogRegClick(ID)\r\n{\r\n    let LogRegPane = document.getElementById(ID);\r\n        if(LogRegPane.className === \"LoginRegPaneNotVisible\")\r\n        {\r\n            LogRegPane.className = \"LoginRegPaneVisible\";\r\n        }\r\n        else\r\n        {\r\n            LogRegPane.className = \"LoginRegPaneNotVisible\";\r\n        }\r\n}\r\n\r\nfunction LoginRegPane(props)\r\n{\r\n    const {rootState, logoutUser} = useContext(AuthContext);\r\n    const {isAuth,theUser} = rootState;\r\n    let id = props.CompId;\r\n\r\n    if(isAuth)\r\n    {\r\n        return (\r\n            <div id={id} className=\"LoginRegPaneNotVisible\">\r\n                <div className=\"PaneHeading\">Howdy, {theUser.fname}</div>\r\n                <hr/>\r\n                <NavLink to=\"/MyAccount\" className=\"PaneItem\" onClick={(e)=>{e.stopPropagation(); HandleLogRegClick(id)}}>Manage Account</NavLink>\r\n                <button onClick={logoutUser} className=\"LogoutButton\">Logout</button>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n    {\r\n        return (\r\n            <div id={id} className=\"LoginRegPaneNotVisible\">\r\n                <div className=\"PaneHeading\">Howdy, Visitor</div>\r\n                <hr/>\r\n                <NavLink to=\"/Login\" className=\"PaneItem\" onClick={(e)=>{ e.stopPropagation(); HandleLogRegClick(id)}}>Login</NavLink>\r\n                <NavLink to=\"/Register\" className=\"PaneItem\" onClick={(e)=>{ e.stopPropagation(); HandleLogRegClick(id)}}>Register</NavLink>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction GlobalHeader()\r\n{\r\n    return (\r\n    <div id=\"GlobalHeader\">\r\n        <div id=\"MobileDrawer\">\r\n            <button id=\"DrawerButton\" className=\"MenuButton\" onClick={HandleClick}></button>\r\n        </div>\r\n        <div id=\"WebTitle\" onClick={function() {\r\n                window.location.href = window.location.href.replace(window.location.href.substr(\r\n                    window.location.href.lastIndexOf('/')+1),'Home');\r\n        }}>\r\n            <div id=\"HeaderIcon\"></div>\r\n            <div id=\"HeaderTitle\">OMCMS</div>\r\n        </div>\r\n        <div id=\"NavCloseArea\" className=\"AreaHidden\" onClick={HandleClick}></div>\r\n        <div id=\"GlobalNav\" className=\"WebNav\">\r\n            <NavLink to=\"/Home\" className=\"NavItem\" onClick={HandleClick}>Home</NavLink>\r\n            <NavLink to=\"/Dashboard\" className=\"NavItem\" onClick={HandleClick}>Dashboard</NavLink>\r\n            <NavLink to=\"/Tools\" className=\"NavItem\" onClick={HandleClick}>Tools</NavLink>\r\n            <NavLink to=\"/About\" className=\"NavItem\" onClick={HandleClick}>About</NavLink>\r\n            <div id=\"DesktopUser\"\r\n                onMouseEnter= { function(){document.getElementById(\"LoginRegPaneDesktop\").className = \"LoginRegPaneVisible\";} }\r\n                onMouseLeave= { function(){document.getElementById(\"LoginRegPaneDesktop\").className = \"LoginRegPaneNotVisible\";} }>\r\n                <div className=\"UserIcon\"></div>\r\n                <LoginRegPane CompId=\"LoginRegPaneDesktop\"/>\r\n            </div>\r\n        </div>\r\n        <div id=\"MobileUser\" \r\n                onClick={ function(){document.getElementById(\"LoginRegPaneMobile\").className = \"LoginRegPaneVisible\";} }\r\n                onMouseLeave= { function(){document.getElementById(\"LoginRegPaneMobile\").className = \"LoginRegPaneNotVisible\";} }>\r\n            <div className=\"UserIcon\"></div>\r\n            <LoginRegPane CompId=\"LoginRegPaneMobile\"/>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default GlobalHeader;","import \"./Styles/home.css\"\r\n\r\nfunction Home() {\r\n    return (\r\n    <div id=\"Home\">  \r\n        <div id=\"HomeBody\" className=\"BlurBG\">\r\n            <div id=\"HomeContent\">\r\n                <h1>Welcome to OMCMS</h1>\r\n                <h4>\r\n                    Tired of Managing Meetings and Classes Links and Sharing them with Interested Audience?<br/> Well OMCMS is Here to Rescue.\r\n                    Your One Stop Solution for Online Meetings and Classes Management,<br/>Register Today and Get Rid of Existing Rigid\r\n                    Unorganised System.\r\n                </h4>\r\n            </div>\r\n        </div>\r\n        <div id=\"HomeFooter\" className=\"BlurBG\">\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default Home;","import React, {useContext, useState} from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from './AuthContext.jsx'\r\nimport \"./Styles/Global.css\"\r\nimport \"./Styles/Login.css\"\r\n\r\nfunction Login()\r\n{\r\n    const {loginUser, isLoggedIn} = useContext(AuthContext);\r\n    const initialState = {\r\n        userInfo:{\r\n            email:'',\r\n            password:'',\r\n        },\r\n        errorMsg:'',\r\n        successMsg:'',\r\n    }\r\n\r\n    const [state, setState] = useState(initialState);\r\n\r\n    const onChangeValue = (e) => \r\n    {\r\n        setState({\r\n            ...state,\r\n            userInfo:{\r\n                ...state.userInfo,\r\n                [e.target.name]:e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    const submitForm = async (event) => \r\n    {\r\n        event.preventDefault();\r\n        const data = await loginUser(state.userInfo);\r\n        if(data.success && data.token)\r\n        {\r\n            setState({\r\n                ...initialState,\r\n            });\r\n            localStorage.setItem('loginToken', data.token);\r\n            await isLoggedIn();\r\n        }\r\n        else\r\n        {\r\n            setState({\r\n                ...state,\r\n                successMsg:'',\r\n                errorMsg:data.message\r\n            });\r\n        }\r\n    }\r\n\r\n    let successMsg = '';\r\n    let errorMsg = '';\r\n\r\n    if(state.errorMsg)\r\n    {\r\n        errorMsg = <div className=\"ErrMsgBox\">{state.errorMsg}</div>;\r\n    }\r\n    if(state.successMsg)\r\n    {\r\n        successMsg = <div className=\"ScsMsgBox\">{state.successMsg}</div>;\r\n    }\r\n\r\n    return(\r\n        <div id=\"Login\">\r\n            <div id=\"LoginBox\">\r\n                <div id=\"LoginUserIcon\"></div>\r\n                <div id=\"LoginPageHeading\">Login</div>\r\n                <hr/>\r\n                <form  onSubmit={submitForm} noValidate>\r\n                    <div id=\"LoginLog\">\r\n                        {errorMsg}\r\n                        {successMsg}\r\n                    </div>\r\n                    <div className=\"InputContainer\">\r\n                        <label htmlFor=\"UserEmail\" className=\"FormLabels\">Registered Email</label>\r\n                        <input id=\"UserEmail\" className=\"FormInputBox\" name=\"email\" type=\"email\" required placeholder=\"Enter Your Email\" value={state.userInfo.email} onChange={onChangeValue} />\r\n                    </div>\r\n                    <div className=\"InputContainer\">\r\n                        <label htmlFor=\"UserPassword\" className=\"FormLabels\">Password</label>\r\n                        <input id=\"UserPassword\" className=\"FormInputBox\" name=\"password\" type=\"password\" required placeholder=\"Enter your password\" value={state.userInfo.password} onChange={onChangeValue} />\r\n                    </div>\r\n                    <div className=\"ButtonHolder\">\r\n                        <button id=\"SubmitLogin\" className=\"ButtonT1\" type=\"submit\">Signin</button>\r\n                    </div>\r\n                    <div className=\"ButtonHolder\">\r\n                        <NavLink to=\"/Register\" id=\"SwitchRegister\" className=\"ButtonT1\">Signup Instead</NavLink>\r\n                    </div>\r\n                </form>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/contact.ab51eaef.png\";","import React, { Component } from 'react'\r\nimport { AuthContext } from \"../AuthContext.jsx\";\r\nimport axios from 'axios'\r\nimport ContactIco from \"../../media/contact.png\"\r\n\r\nconst Axios = axios.create({ \r\n    baseURL: 'http://localhost/omcms-server/',\r\n});\r\n\r\nclass DashboardAdmin extends Component\r\n{\r\n    static contextType = AuthContext;\r\n\r\n    state = {\r\n        org_name: '',\r\n        logs: {errMsg:'', scsMsg:''},\r\n        staff_info:[]\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.GetOrganisationName = this.context.GetOrganisationName;\r\n        this.GetOrganisationName().then(Org => { \r\n            if(Org)\r\n            this.setState({...this.state,\r\n                org_name: Org.Name\r\n            });  \r\n        })\r\n        this.GetStaffDetails();\r\n    }\r\n\r\n    GetStaffDetails = async (Org) => {\r\n        const loginToken = localStorage.getItem('loginToken');\r\n        if(loginToken)\r\n        {\r\n            Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken;\r\n            const {data}= await Axios.get('Getters/GetStaffInfo.php');\r\n            if(data.Payload)\r\n            {\r\n                this.setState({\r\n                    ...this.state,\r\n                    staff_info:[...data.Payload]\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onChangeValue = (e) => \r\n    {\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.name]:e.target.value\r\n        });\r\n    }\r\n\r\n    render()\r\n    {\r\n        let successMsg = '';\r\n        let errorMsg = '';\r\n    \r\n        if(this.state.logs.errorMsg)\r\n        {\r\n            errorMsg = <div>{this.state.logs.errorMsg}</div>;\r\n        }\r\n        if(this.state.logs.successMsg)\r\n        {\r\n            successMsg = <div>{this.state.logs.successMsg}</div>;\r\n        }\r\n        \r\n        let StaffInfo = [];\r\n        let i = 1;\r\n        for(let staffMem of this.state.staff_info)\r\n        {\r\n            let StaffInfoPalette = <div key={i++} className=\"StaffListRow\">\r\n                <div id=\"StaffMemDet\">\r\n                    <div id=\"StaffIcon\"></div>\r\n                    <div id=\"StaffName\"  className=\"DashboardSubheading2\">{staffMem.fname} {staffMem.lname}</div>\r\n                </div>\r\n                <a id=\"ContactStaffButton\" className=\"EventButton\" href={\"mailto://\"+staffMem.email} rel=\"noreferrer\" target=\"_blank\">\r\n                        <img id=\"ContactStaffIco\" src={ContactIco} alt=\"Contact\"/>\r\n                </a>\r\n            </div>;\r\n            StaffInfo = [...StaffInfo, StaffInfoPalette];\r\n        }\r\n\r\n        if(!StaffInfo.length)\r\n        {\r\n            StaffInfo.push(<div className=\"DashboardSubheading3\" key=\"EmptyList\">No Member is Registered with Your Organisation</div>)\r\n        }\r\n\r\n        return (\r\n            <div id=\"DashboardAdmin\" className=\"DashBoardBodyCommon\">\r\n                <div className=\"ContentHeading\">Dashboard</div>\r\n                <div className=\"DashboardContentCommon\">\r\n                    <div id=\"OrgInfoPalette\" className=\"DashboardPalette\">\r\n                        <div className=\"DashboardSubheading1\">Welcome<br/>{this.state.org_name}</div>\r\n                        {errorMsg}\r\n                        {successMsg}\r\n                    </div>\r\n                    <div id=\"StaffDetailsPalette\" className=\"DashboardPalette\">\r\n                        <div>\r\n                            <div className=\"DashboardSubheading1\">List of Staff Members</div>\r\n                            <div className=\"DashboardSubheading3\">Number of Staff Members: {StaffInfo.length}</div>\r\n                            <hr/>\r\n                        </div>\r\n                        <div id=\"StaffList\"  className=\"EventList\">\r\n                            {StaffInfo}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default DashboardAdmin;","import React, {useState, Component} from 'react'\r\nimport { AuthContext } from \"../AuthContext.jsx\";\r\nimport axios from 'axios'\r\n\r\nconst Axios = axios.create({ \r\n    baseURL: 'http://localhost/omcms-server/',\r\n});\r\n\r\nfunction NewEvent(props)\r\n{\r\n    const initialState = {\r\n        EventInfo:{\r\n            EvntID:'',\r\n            EvntTitle:'',\r\n            EvntLink:''\r\n        },\r\n        errorMsg:'',\r\n    }\r\n\r\n    const [state, setState] = useState(initialState);\r\n\r\n    const onChangeValue = (e) => \r\n    {\r\n        setState({\r\n            ...state,\r\n            EventInfo:{\r\n                ...state.EventInfo,\r\n                [e.target.name]:e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    const AddEventDetails = async (EvntInfo)=>{\r\n        const loginToken = localStorage.getItem('loginToken');\r\n        if(loginToken)\r\n        {\r\n            Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken;\r\n            const {data}= await Axios.post('Setters/AddEvent.php', EvntInfo);\r\n            return {success:data.success, log:data.message};\r\n        }\r\n    }\r\n\r\n    const SubmitEventDetails = async (event) => {\r\n        event.preventDefault();\r\n        const data = await AddEventDetails(state.EventInfo);\r\n        if(data.success)\r\n        {\r\n            setState({...initialState});\r\n            props.handle();\r\n            document.getElementById(\"NewEventContainer\").className=\"EventContainer CreateEventHidden\";\r\n        }\r\n        else\r\n            setState({...state, errorMsg:data.log});\r\n    }\r\n\r\n\r\n    let errorMsg = '';\r\n    if(state.errorMsg)\r\n    {\r\n        errorMsg = <div className=\"ErrMsgBox\">{state.errorMsg}</div>;\r\n    }\r\n\r\n    return(\r\n    <div id=\"NewEventContainer\" className=\"EventContainer CreateEventHidden\" onClick={()=>{\r\n        document.getElementById(\"NewEventContainer\").className=\"EventContainer CreateEventHidden\"}}>\r\n        <div id=\"CreateEventPane\" className=\"EventPane\" onClick={(event)=>event.stopPropagation()}>\r\n            <div id=\"LoginPageHeading\">Create New Event</div>\r\n            <hr/>\r\n            <form onSubmit={SubmitEventDetails}>\r\n                <div id=\"LoginLog\">{errorMsg}</div>\r\n                <div className=\"InputContainer\">\r\n                    <label htmlFor=\"E_ID\" className=\"FormLabels\">Event ID</label>\r\n                    <input id=\"E_ID\" className=\"FormInputBox\" name=\"EvntID\" type=\"text\" required \r\n                    placeholder=\"Enter Event ID\" onChange={onChangeValue} value={state.EventInfo.EvntID}/>\r\n                </div>\r\n                <div className=\"InputContainer\">\r\n                    <label htmlFor=\"E_Title\" className=\"FormLabels\">Event Title</label>\r\n                    <input id=\"E_Title\" className=\"FormInputBox\" name=\"EvntTitle\" type=\"text\" required \r\n                    placeholder=\"Enter Event Name\" onChange={onChangeValue} value={state.EventInfo.EvntTitle}/>\r\n                </div>\r\n                <div className=\"InputContainer\">\r\n                    <label htmlFor=\"L_ID\" className=\"FormLabels\">Link</label>\r\n                    <input id=\"L_ID\" className=\"FormInputBox\" name=\"EvntLink\" type=\"text\" required \r\n                    placeholder=\"Paste Link Here\" onChange={onChangeValue} value={state.EventInfo.EvntLink}/>\r\n                </div>\r\n                <div className=\"ButtonHolder\">\r\n                    <button id=\"SubmitLogin\" className=\"ButtonT1\" type=\"submit\">Create</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nclass DashboardStaff extends Component\r\n{   \r\n    static contextType = AuthContext;\r\n\r\n    state = {\r\n        fname: '',\r\n        lname: '',\r\n        email: '',\r\n        org_name: '',\r\n        org_email: '',\r\n        events_list: '',\r\n        logs: {errMsg:'', scsMsg:''}\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.GetOrganisationName = this.context.GetOrganisationName;\r\n        this.GetOrganisationName().then(Org => { \r\n            if(Org)\r\n            this.setState({...this.state,\r\n                org_name: Org.Name,\r\n                org_email: Org.Email\r\n            });  \r\n        })\r\n        this.GetEventsList();\r\n    \r\n        const {theUser, theOrganisation} = this.context.rootState;\r\n        if(theUser)\r\n            this.setState({...this.state,\r\n                fname: theUser.fname,\r\n                lname: theUser.lname,\r\n                email: theUser.email\r\n            });\r\n        if(theOrganisation)\r\n            this.setState({...this.state,\r\n                org_name: theOrganisation.Name,\r\n                org_email: theOrganisation.Email\r\n            });\r\n    }\r\n\r\n    childCallback = ()=>{\r\n        this.GetEventsList();\r\n    }\r\n\r\n    GetEventsList = async () => {\r\n        const loginToken = localStorage.getItem('loginToken');\r\n        if(loginToken)\r\n        {\r\n            Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken;\r\n            const {data}= await Axios.get('Getters/GetEventList.php');\r\n            if(data.Payload)\r\n            {\r\n                this.setState({\r\n                    ...this.state,\r\n                    events_list:[...data.Payload]\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onChangeValue = (e) => \r\n    {\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.name]:e.target.value\r\n        });\r\n    }\r\n\r\n    render()\r\n    {\r\n        let successMsg = '';\r\n        let errorMsg = '';\r\n    \r\n        if(this.state.logs.errorMsg)\r\n        {\r\n            errorMsg = <div>{this.state.logs.errorMsg}</div>;\r\n        }\r\n        if(this.state.logs.successMsg)\r\n        {\r\n            successMsg = <div>{this.state.logs.successMsg}</div>;\r\n        }\r\n\r\n        let EventList = [];\r\n        let i = 0;\r\n        for(let event of this.state.events_list)\r\n        {\r\n            let tmp = event.link.substring(0,8);\r\n            if(tmp !== \"https://\")\r\n                event.link = \"http://\" + event.link;\r\n            let EventPalette = <div className=\"EventPalette\" key={i++}>\r\n                <div className=\"DashboardSubheading1 EventPaletteHeader\">{event.title}</div>\r\n                <div className=\"DashboardSubheading3 EventPaletteHeader\">Organiser ID: {event.s_id}<br/>Event ID: {event.e_id}</div>\r\n                <div className=\"EventPaletteFooter\">\r\n                    <a id=\"StartEventButton\" className=\"EventButton\" href={event.link} rel=\"noreferrer\" target=\"_blank\">Start</a>\r\n                </div>\r\n            </div>;\r\n            EventList = [...EventList, EventPalette];\r\n        }\r\n        if(!EventList.length)\r\n        {\r\n            EventList.push(<div className=\"DashboardSubheading3\" key=\"EmptyList\">No Event<br/>Create One By Clicking (+) Button</div>)\r\n        }\r\n\r\n        return (\r\n            <div id=\"DashboardStaff\" className=\"DashBoardBodyCommon\">\r\n                <div className=\"ContentHeading\">Dashboard</div>\r\n                <div className=\"DashboardContentCommon\">\r\n                    <div id=\"StaffInfoPalette\" className=\"DashboardPalette\">\r\n                        <div className=\"DashboardSubheading1\">Welcome</div>\r\n                        <div className=\"DashboardSubheading1\">{this.state.fname} {this.state.lname}</div>\r\n                        <div className=\"DashboardSubheading2\">@{this.state.org_name}</div>\r\n                        {errorMsg}\r\n                        {successMsg}\r\n                    </div>\r\n                    <div id=\"StaffEventsPalette\" className=\"DashboardPalette\">\r\n                        <div className=\"EventHeader\">\r\n                            <div className=\"DashboardSubheading1\">Events</div>\r\n                            <button className=\"EventHeaderButton\" onClick={()=>{\r\n                                if(document.getElementById(\"NewEventContainer\"))\r\n                                    document.getElementById(\"NewEventContainer\").className=\"EventContainer CreateEventVisible\";}\r\n                            }/>\r\n                            <NewEvent handle={this.childCallback}/>\r\n                        </div>\r\n                        <hr/>\r\n                        <div id=\"StaffEventList\" className=\"EventList\">{EventList}</div>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default DashboardStaff;","import React, {useState, Component} from 'react'\r\nimport { AuthContext } from \"../AuthContext.jsx\";\r\nimport axios from 'axios'\r\nimport ContactIco from \"../../media/contact.png\"\r\n\r\nconst Axios = axios.create({ \r\n    baseURL: 'http://localhost/omcms-server/',\r\n});\r\n\r\nfunction AddEvent(props)\r\n{\r\n    const initialState = {\r\n        EventInfo:{\r\n            OrgnrID:'',\r\n            EvntID:'',\r\n        },\r\n        errorMsg:'',\r\n    }\r\n\r\n    const [state, setState] = useState(initialState);\r\n\r\n    const onChangeValue = (e) => \r\n    {\r\n        setState({\r\n            ...state,\r\n            EventInfo:{\r\n                ...state.EventInfo,\r\n                [e.target.name]:e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    const AddEventDetails = async (EvntInfo)=>{\r\n        const loginToken = localStorage.getItem('loginToken');\r\n        if(loginToken)\r\n        {\r\n            Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken;\r\n            const {data}= await Axios.post('Setters/AddEvent.php', EvntInfo);\r\n            return {success:data.success, log:data.message};\r\n        }\r\n    }\r\n\r\n    const SubmitEventDetails = async (event) => {\r\n        event.preventDefault();\r\n        const data = await AddEventDetails(state.EventInfo);\r\n        if(data.success)\r\n        {\r\n            setState({...initialState});\r\n            props.handle();\r\n            document.getElementById(\"AddEventContainer\").className=\"EventContainer CreateEventHidden\";\r\n        }\r\n        else\r\n            setState({...state, errorMsg:data.log});\r\n    }\r\n\r\n\r\n    let errorMsg = '';\r\n    if(state.errorMsg)\r\n    {\r\n        errorMsg = <div className=\"ErrMsgBox\">{state.errorMsg}</div>;\r\n    }\r\n\r\n    return(\r\n    <div id=\"AddEventContainer\" className=\"EventContainer CreateEventHidden\" onClick={()=>{\r\n        document.getElementById(\"AddEventContainer\").className=\"EventContainer CreateEventHidden\"}}>\r\n        <div id=\"AddEventPane\" className=\"EventPane\" onClick={(event)=>event.stopPropagation()}>\r\n            <div id=\"LoginPageHeading\">Add New Event</div>\r\n            <hr/>\r\n            <form onSubmit={SubmitEventDetails}>\r\n                <div id=\"LoginLog\">{errorMsg}</div>\r\n                <div className=\"InputContainer\">\r\n                    <label htmlFor=\"I_ID\" className=\"FormLabels\">Organiser ID</label>\r\n                    <input id=\"I_ID\" className=\"FormInputBox\" name=\"OrgnrID\" type=\"text\" required \r\n                    placeholder=\"Enter Organiser ID\" onChange={onChangeValue} value={state.EventInfo.OrgnrID}/>\r\n                </div>\r\n                <div className=\"InputContainer\">\r\n                    <label htmlFor=\"E_ID\" className=\"FormLabels\">Event ID</label>\r\n                    <input id=\"E_ID\" className=\"FormInputBox\" name=\"EvntID\" type=\"text\" required \r\n                    placeholder=\"Enter Event ID\" onChange={onChangeValue} value={state.EventInfo.EvntID}/>\r\n                </div>\r\n                <div className=\"ButtonHolder\">\r\n                        <button id=\"SubmitLogin\" className=\"ButtonT1\" type=\"submit\">Add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nclass DashboardMember extends Component\r\n{   \r\n    static contextType = AuthContext;\r\n\r\n    state = {\r\n        fname: '',\r\n        lname: '',\r\n        email: '',\r\n        events_list: '',\r\n        logs: {errMsg:'', scsMsg:''}\r\n    }\r\n    \r\n    componentDidMount()\r\n    {\r\n        this.GetEventsList();\r\n        const {theUser} = this.context.rootState;\r\n        if(theUser)\r\n            this.setState({...this.state,\r\n                fname: theUser.fname,\r\n                lname: theUser.lname,\r\n                email: theUser.email\r\n            });\r\n    }\r\n\r\n    childCallback = ()=>{\r\n        this.GetEventsList();\r\n    }\r\n\r\n    GetEventsList = async () => {\r\n        const loginToken = localStorage.getItem('loginToken');\r\n        if(loginToken)\r\n        {\r\n            Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken;\r\n            const {data}= await Axios.get('Getters/GetEventList.php');\r\n            if(data.Payload)\r\n            {\r\n                this.setState({\r\n                    ...this.state,\r\n                    events_list:[...data.Payload]\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onChangeValue = (e) => \r\n    {\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.name]:e.target.value\r\n        });\r\n    }\r\n\r\n    render()\r\n    {\r\n        let successMsg = '';\r\n        let errorMsg = '';\r\n    \r\n        if(this.state.logs.errorMsg)\r\n        {\r\n            errorMsg = <div>{this.state.logs.errorMsg}</div>;\r\n        }\r\n        if(this.state.logs.successMsg)\r\n        {\r\n            successMsg = <div>{this.state.logs.successMsg}</div>;\r\n        }\r\n        \r\n        let EventList = [];\r\n        let i = 0;\r\n        for(let event of this.state.events_list)\r\n        {\r\n            let tmp = event.link.substring(0,8);\r\n            if(tmp !== \"https://\")\r\n            event.link = \"http://\" + event.link;\r\n            let EventPalette = <div className=\"EventPalette\" key={i++}>\r\n                <div className=\"EventPaletteHeader\">\r\n                    <div className=\"DashboardSubheading1\">{event.title}</div> \r\n                    <div className=\"DashboardSubheading3\">Organiser: {event.fname} {event.lname}</div> \r\n                </div>\r\n                <div className=\"EventPaletteFooter\">\r\n                    <a id=\"ContactStaffButton\" className=\"EventButton\" href={\"mailto://\"+event.email} rel=\"noreferrer\" target=\"_blank\">\r\n                        <img id=\"ContactStaffIco\" src={ContactIco} alt=\"Contact\"/>\r\n                    </a>  \r\n                    <a id=\"JoinEventButton\" className=\"EventButton\" href={event.link} rel=\"noreferrer\" target=\"_blank\">Start</a>\r\n                </div>\r\n            </div>;\r\n            EventList = [...EventList, EventPalette];\r\n        }\r\n        if(!EventList.length)\r\n        {\r\n            EventList.push(<div className=\"DashboardSubheading3\" key=\"EmptyList\">No Event<br/>Add One By Clicking (+) Button</div>)\r\n        }\r\n\r\n        return (\r\n            <div id=\"DashboardMember\" className=\"DashBoardBodyCommon\">\r\n                <div className=\"ContentHeading\">Dashboard</div>\r\n                <div className=\"DashboardContentCommon\">\r\n                    <div id=\"MemberInfoPalette\" className=\"DashboardPalette\">\r\n                        <div className=\"DashboardSubheading1\">Welcome</div>\r\n                        <div className=\"DashboardSubheading1\">{this.state.fname} {this.state.lname}</div>\r\n                        {errorMsg}\r\n                        {successMsg}\r\n                    </div>\r\n                    <div id=\"MemberEventsPalette\" className=\"DashboardPalette\">\r\n                        <div className=\"EventHeader\">\r\n                            <div className=\"DashboardSubheading1\">Events</div>\r\n                            <button className=\"EventHeaderButton\" onClick={()=>{\r\n                                    if(document.getElementById(\"AddEventContainer\"))\r\n                                    document.getElementById(\"AddEventContainer\").className=\"EventContainer CreateEventVisible\";}\r\n                            }/>\r\n                            <AddEvent handle={this.childCallback}/>\r\n                        </div>\r\n                        <hr/>\r\n                        <div id=\"MemberEventList\" className=\"EventList\">{EventList}</div>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default DashboardMember;","import React, {useContext} from 'react';\r\nimport { AuthContext } from \"./AuthContext.jsx\";\r\nimport Login from \"./Login.jsx\";\r\nimport DashboardAdmin from \"./Dashboards/DasboardAdmin.jsx\"\r\nimport DashboardStaff from \"./Dashboards/DasboardStaff.jsx\"\r\nimport DashboardMember from \"./Dashboards/DasboardMember.jsx\"\r\nimport \"./Styles/Dashboard.css\"\r\n\r\nfunction DashboardSelector() \r\n{\r\n    const {rootState} = useContext(AuthContext);\r\n    const {isAuth, theUser} = rootState;\r\n\r\n    if(isAuth)\r\n    {\r\n        var UserType = theUser.authority;\r\n        if(UserType === 'admin')\r\n            return <DashboardAdmin></DashboardAdmin>\r\n        else if(UserType === 'staff')\r\n            return <DashboardStaff></DashboardStaff>\r\n        else if(UserType === 'member')\r\n            return <DashboardMember></DashboardMember>\r\n        else\r\n        {\r\n            return (\r\n                <div><h1>Something Went Wrong!!!</h1></div>\r\n            );\r\n        }\r\n    }\r\n    return (<Login></Login>);\r\n}\r\n\r\nexport default DashboardSelector;","import React, {useContext} from 'react';\r\nimport { AuthContext } from \"./AuthContext.jsx\";\r\nimport Login from \"./Login.jsx\";\r\nimport \"./Styles/Tools.css\"\r\n\r\nfunction Tools() \r\n{\r\n    const {rootState} = useContext(AuthContext);\r\n    const {isAuth} = rootState;\r\n\r\n    if(isAuth)\r\n    {\r\n        return (\r\n            <div id=\"Tools\">\r\n                <div className=\"ContentHeading\">Tools</div>\r\n                <div>Tools are in development right now, will be available with next releases.</div>\r\n            </div>);\r\n    }\r\n\r\n    return (<Login></Login>);\r\n}\r\n\r\nexport default Tools;","import \"./Styles/About.css\"\r\n\r\nfunction About() \r\n{\r\n    return (\r\n        <div id=\"About\">\r\n            <div className=\"ContentHeading\">About OMCMS</div>\r\n            <div id=\"AboutBody\">\r\n                <div id=\"AboutContent\">\r\n                    OMCMS Is A Link Management System on An Abstracted View, But It Is Equipped with Combined Tools Like Staff and Schedule Management System, It Offers A Wide Variety Is Utilities to Enhance Your Online Workflow.\r\n                    <br/><br/>\r\n                    Centralized Information Systems Are Modern Day Need. During Covid-19 Pandemic We’ve Seen Non-Centralized System Becoming Rigid and Reducing Productivity. \r\n                    <br/><br/>\r\n                    2020 Was The Year Of Online Meetings And Online Classes, Due To High Demand, We’ve Seen Online Meetings And Classes Systems Evolving, As A Result We Got Wide Variety  Of Meeting Apps, All Of Them Based On Simple Principle Create A Meeting And Share Links, But Sharing Of Those Links Is Tedious And Non-Centralized, Different Messaging And Email Platform Being Used For Sharing Those Links, Which Also Raises Some Privacy Concerns As Your Phone Number And Email Being Shared With Multiple Audience. \r\n                    <br/><br/>\r\n                    With OMCMS All These Flaws Are Removed and A Simple Platform with Productivity Enhancing Features Is Introduced.\r\n                </div>\r\n                <div id=\"AboutFooter\">\r\n                    The System Is Being Developed and Maintained By Satyam Mishra Under Guidance Of Md. Anzar Ahmad For IGNOU BCSP064 Project. \r\n                </div>\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default About;","import React, {useContext, useState} from 'react'\r\nimport { NavLink} from 'react-router-dom'\r\nimport {AuthContext} from './AuthContext.jsx'\r\nimport \"./Styles/Register.css\"\r\n\r\nfunction Register()\r\n{\r\n    const {registerUser} = useContext(AuthContext);\r\n    const initialState = {\r\n        userInfo:{\r\n            fname:'',\r\n            lname:'',\r\n            email:'',\r\n            password:'',\r\n            authority:''\r\n        },\r\n        errorMsg:'',\r\n        successMsg:'',\r\n    }\r\n    const [state,setState] = useState(initialState);\r\n\r\n    const submitForm = async (event) => \r\n    {\r\n        event.preventDefault();\r\n        const data = await registerUser(state.userInfo);\r\n        if(data.success)\r\n        {\r\n            setState({\r\n                ...initialState,\r\n                successMsg:data.message,\r\n            });\r\n\r\n            setTimeout(()=>{\r\n                setState({...initialState, successMsg:'Redirecting in 5 Seconds'})\r\n            }, 2000);\r\n            \r\n            setTimeout(() => {\r\n                let PageURL = window.location.href;\r\n                window.location.href = PageURL.replace(PageURL.substr(PageURL.lastIndexOf('/')+1),'Login');\r\n            }, 5000);\r\n        }\r\n        else\r\n        {\r\n            setState({\r\n                ...state,\r\n                successMsg:'',\r\n                errorMsg:data.message\r\n            });\r\n        }\r\n    }\r\n\r\n    const onChangeValue = (e) => \r\n    {\r\n        setState({\r\n            ...state,\r\n            userInfo:{\r\n                ...state.userInfo,\r\n                [e.target.name]:e.target.value\r\n            }\r\n        });\r\n    }\r\n    \r\n    let successMsg = '';\r\n    let errorMsg = '';\r\n    if(state.errorMsg){\r\n        errorMsg = <div className=\"ErrMsgBox\">{state.errorMsg}</div>;\r\n    }\r\n    if(state.successMsg){\r\n        successMsg = <div className=\"ScsMsgBox\">{state.successMsg}</div>;\r\n    }\r\n\r\n    return(\r\n        <div id=\"Register\">\r\n            <div id=\"RegisterBox\">\r\n                <div id=\"RegisterUserIcon\"></div>\r\n                <div id=\"RegisterPageHeading\">Register</div>\r\n                <hr/>\r\n                <form onSubmit={submitForm} noValidate>\r\n                    <div id=\"RegisterLog\">\r\n                        {errorMsg}\r\n                        {successMsg}\r\n                    </div>\r\n                    <div className=\"InputContainer\">\r\n                        <label htmlFor=\"FirstName\" className=\"FormLabels\">First Name</label>\r\n                        <input id=\"FirstName\" className=\"FormInputBox\" name=\"fname\" required type=\"text\" value={state.userInfo.fname} onChange={onChangeValue} placeholder=\"Enter Your First Name\"/>\r\n                    </div>\r\n                    <div className=\"InputContainer\">\r\n                        <label htmlFor=\"LastName\" className=\"FormLabels\">Last Name</label>\r\n                        <input id=\"LastName\" className=\"FormInputBox\" name=\"lname\" required type=\"text\" value={state.userInfo.lname} onChange={onChangeValue} placeholder=\"Enter Your Last Name\"/>\r\n                    </div>\r\n                    <div className=\"InputContainer\">\r\n                        <label htmlFor=\"RegEmail\" className=\"FormLabels\">Email</label>\r\n                        <input id=\"RegEmail\" className=\"FormInputBox\" name=\"email\" required type=\"email\" value={state.userInfo.email} onChange={onChangeValue} placeholder=\"Enter Your Email\"/>\r\n                    </div>\r\n                    <div className=\"InputContainer\">\r\n                        <label htmlFor=\"RegPassword\" className=\"FormLabels\">Password</label>\r\n                        <input id=\"RegPassword\" className=\"FormInputBox\" name=\"password\" required type=\"password\" value={state.userInfo.password} onChange={onChangeValue} placeholder=\"Enter your password\"/>\r\n                    </div>\r\n                    <div className=\"InputContainer\">\r\n                        <label htmlFor=\"RegAuthority\" className=\"FormLabels\">Category</label>\r\n                        <select id=\"RegAuthority\" className=\"FormInputBox\" name=\"authority\" defaultValue='' required onChange={onChangeValue}>\r\n                            <option name='authority' value='' disabled hidden>Choose Your Category</option>\r\n                            <option name='authority' value='admin'>Institute</option>\r\n                            <option name='authority' value='staff'>Contributors/Staff</option>\r\n                            <option name='authority' value='member'>Members/Students</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"ButtonHolder\">\r\n                        <button id=\"SubmitRegister\" className=\"ButtonT1\" type=\"submit\">Signup</button>\r\n                    </div>\r\n                    <div className=\"ButtonHolder\">\r\n                        <NavLink to=\"/Login\" id=\"SwitchLogin\" className=\"ButtonT1\">Signin Instead</NavLink>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register","import React, { Component} from 'react'\r\nimport { AuthContext } from \"./AuthContext.jsx\";\r\nimport axios from 'axios'\r\nimport \"./Styles/MyAccount.css\"\r\n\r\nconst Axios = axios.create({ \r\n    baseURL: 'http://localhost/omcms-server/',\r\n});\r\n\r\nclass MyAccount extends Component\r\n{\r\n    static contextType = AuthContext;\r\n\r\n    state = {\r\n        fname: '',\r\n        lname: '',\r\n        email: '',\r\n        changed_fname:'',\r\n        changed_lname:'',\r\n        changed_password:'',\r\n        changed_confirm_password:'',\r\n        authority:'',\r\n        org_name:'',\r\n        update_org_name:'',\r\n        org_email:'',\r\n        update_org_email:'',\r\n        logs: {errMsg:'', scsMsg:''}\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.ChangeName = this.context.ChangeName;\r\n        const {theUser} = this.context.rootState;\r\n        if(theUser)\r\n            this.setState({...this.state,\r\n                fname: theUser.fname,\r\n                lname: theUser.lname,\r\n                email: theUser.email,\r\n                authority: theUser.authority\r\n            });\r\n        if(theUser.authority === 'admin' || theUser.authority === 'staff')\r\n        {\r\n            \r\n            this.GetOrganisationName = this.context.GetOrganisationName;\r\n            this.GetOrganisationName().then(Org => { \r\n                if(Org)\r\n                this.setState({...this.state,\r\n                    org_name: Org.Name,\r\n                    org_email: Org.Email\r\n                });  \r\n            });\r\n        }\r\n    }\r\n    /***************************************Change Organization Name***********************************************************/\r\n    SetOrganisationName = async (OrgName) => {\r\n        const loginToken = localStorage.getItem('loginToken');\r\n\r\n        if(loginToken)\r\n        {\r\n            Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken;\r\n            const UpdateLog = await Axios.post('Setters/SetOrgName.php',{\r\n                organisation_name: OrgName\r\n            });\r\n            return UpdateLog.data;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    submitChangeOrgName = async (event) => {\r\n        event.preventDefault();\r\n        const data = await this.SetOrganisationName(this.state.update_org_name);\r\n        if(data.success)\r\n        {\r\n            this.setState({...this.state, \r\n                org_name: this.state.update_org_name, \r\n                update_org_name:'',\r\n                logs : {...this.state.logs,\r\n                    successMsg:data.message,\r\n                    errorMsg:''}\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                ...this.state,\r\n                logs : {...this.state.logs,\r\n                    successMsg:'',\r\n                    errorMsg:data.message}\r\n            });\r\n        }\r\n    }\r\n    /***************************************Change Organization Email***********************************************************/\r\n    SetOrganisationEmail = async (OrgEmail) => {\r\n        const loginToken = localStorage.getItem('loginToken');\r\n\r\n        if(loginToken)\r\n        {\r\n            Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken;\r\n            const UpdateLog = await Axios.post('Setters/SetOrgEmail.php',{\r\n                organisation_email: OrgEmail\r\n            });\r\n            return UpdateLog.data;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    submitChangeOrgEmail = async (event) => {\r\n        event.preventDefault();\r\n        const data = await this.SetOrganisationEmail(this.state.update_org_email);\r\n        if(data.success)\r\n        {\r\n            this.setState({...this.state, \r\n                org_email: this.state.update_org_email, \r\n                update_org_email:'',\r\n                logs : {...this.state.logs,\r\n                    successMsg:data.message,\r\n                    errorMsg:''}\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                ...this.state,\r\n                logs : {...this.state.logs,\r\n                    successMsg:'',\r\n                    errorMsg:data.message}\r\n            });\r\n        }\r\n    }\r\n    /**************************************Change User Password********************************************************/\r\n    SetNewPassword = async (Req) => {\r\n        const loginToken = localStorage.getItem('loginToken');\r\n\r\n        if(loginToken)\r\n        {\r\n            Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken;\r\n            const UpdateLog = await Axios.post('Setters/SetNewPassword.php',{\r\n                Password: Req.password,\r\n                ConfrimPassword: Req.confirmPassword,\r\n            });\r\n            return UpdateLog.data;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    submitChangePassword = async (event) => \r\n    {\r\n        event.preventDefault();\r\n        const data = await this.SetNewPassword({\r\n            password:this.state.changed_password,\r\n            confirmPassword:this.state.changed_confirm_password\r\n        });\r\n        if(data.success)\r\n        {\r\n            this.setState({...this.state, \r\n                changed_password:'',\r\n                changed_confirm_password:'',\r\n                logs : {...this.state.logs,\r\n                    successMsg:data.message,\r\n                    errorMsg:''}\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                ...this.state,\r\n                logs : {...this.state.logs,\r\n                    successMsg:'',\r\n                    errorMsg:data.message}\r\n            });\r\n        }\r\n    }\r\n    /***************************************Change User Name***********************************************************/\r\n    submitChangeName = async (event) => \r\n    {\r\n        event.preventDefault();\r\n        const data = await this.ChangeName({fname:this.state.changed_fname ,lname:this.state.changed_lname});\r\n        if(data.success)\r\n        {\r\n            this.setState({\r\n                ...this.state,\r\n                fname:this.state.changed_fname,\r\n                lname: this.state.changed_lname,\r\n                changed_fname:'',\r\n                changed_lname:'',\r\n                logs : {...this.state.logs,\r\n                    successMsg:data.message,\r\n                    errorMsg:''}\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                ...this.state,\r\n                logs : {...this.state.logs,\r\n                    successMsg:'',\r\n                    errorMsg:data.message}\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeValue = (e) => \r\n    {\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.name]:e.target.value\r\n        });\r\n    }\r\n    /***************************************Render***********************************************************/\r\n    render()\r\n    {       \r\n        let OtherElements = [];\r\n        if(this.state.authority === 'admin')\r\n        {\r\n            OtherElements.push(\r\n            <form key='1' className=\"MyAccountRow\" onSubmit={this.submitChangeOrgName}>\r\n                <div className=\"RowLabel\">Organisation Name</div>\r\n                <div className=\"ComplexForm\">\r\n                    <input id=\"ChangeOrgName\" className=\"ComplexInput\" name=\"update_org_name\" type=\"text\" required \r\n                    placeholder={this.state.org_name} value={this.state.update_org_name} onChange={this.onChangeValue} />\r\n                    <button className=\"ComplexButton\" type=\"submit\">Update</button>\r\n                </div>\r\n            </form>);\r\n        }\r\n\r\n        if(this.state.authority === 'staff')\r\n        {\r\n            OtherElements.push(\r\n            <form key='2' className=\"MyAccountRow\"  onSubmit={this.submitChangeOrgEmail}>\r\n                <div className=\"RowLabel\">Organisation Email</div>\r\n                <div className=\"ComplexForm\">\r\n                    <input id=\"AddOrg\" className=\"ComplexInput\" name=\"update_org_email\" type=\"text\" required \r\n                    placeholder={this.state.org_email} value={this.state.update_org_email} onChange={this.onChangeValue} />\r\n                    <button className=\"ComplexButton\" type=\"submit\">Add</button>\r\n                </div>\r\n            </form>);\r\n        }\r\n        \r\n        return(\r\n            <div id=\"MyAccount\">\r\n                <div id=\"MyAccountBody\">\r\n                    <div id=\"MyAccountIcon\"></div>\r\n                    <div id=\"MyAccountHeading\">MyAccount</div>\r\n                    <hr/>\r\n                    <div id=\"MyAccountLogger\">                    \r\n                        {this.state.logs.successMsg}\r\n                        {this.state.logs.errorMsg}\r\n                    </div>\r\n                    <div className=\"MyAccountRow\">\r\n                        <div className=\"RowLabel\">Email</div>\r\n                        <div className=\"RowTextData\">{this.state.email}</div>\r\n                    </div>\r\n                    <form className=\"MyAccountRow\" onSubmit={this.submitChangeName}>\r\n                        <label className=\"RowLabel\">Name</label>\r\n                        <div className=\"ComplexForm\">\r\n                            <input id=\"ChangeFname\" className=\"ComplexInput\" name=\"changed_fname\" type=\"text\" required \r\n                            placeholder={this.state.fname} value={this.state.changed_fname} onChange={this.onChangeValue} />\r\n                            <input id=\"ChangeLname\" className=\"ComplexInput\" name=\"changed_lname\" type=\"text\" required \r\n                            placeholder={this.state.lname} value={this.state.changed_lname} onChange={this.onChangeValue} />\r\n                            <button className=\"ComplexButton\" type=\"submit\">Update</button>\r\n                        </div>\r\n                    </form>\r\n                    <form className=\"MyAccountRow\" onSubmit={this.submitChangePassword}>\r\n                        <label className=\"RowLabel\">Password</label>\r\n                        <div className=\"ComplexForm\">\r\n                            <input id=\"ChangePass\" className=\"ComplexInput\" name=\"changed_password\" type=\"password\" required \r\n                            placeholder=\"New Password\" value={this.state.changed_password} onChange={this.onChangeValue} />\r\n                            <input id=\"ConfirmPass\" className=\"ComplexInput\" name=\"changed_confirm_password\" type=\"password\" required \r\n                            placeholder=\"Confirm New Password\" value={this.state.changed_confirm_password} onChange={this.onChangeValue} />\r\n                            <button className=\"ComplexButton\" type=\"submit\">Update</button>\r\n                        </div>\r\n                    </form>\r\n                    {OtherElements}\r\n                </div>\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default MyAccount;","import React, {useContext} from 'react'\r\nimport { Route, Redirect, HashRouter} from \"react-router-dom\";\r\nimport AuthContextProvider, { AuthContext} from \"./components/AuthContext.jsx\";\r\nimport GlobalHeader from \"./components/GlobalHeader.jsx\"\r\nimport Home from \"./components/home.jsx\";\r\nimport DashboardSelector from \"./components/DashboardSelector.jsx\";\r\nimport Tools from \"./components/Tools.jsx\";\r\nimport About from \"./components/About.jsx\";\r\nimport Login from \"./components/Login.jsx\";\r\nimport Register from \"./components/Register.jsx\";\r\nimport MyAccount from \"./components/MyAccount.jsx\";\r\nimport './App.css';\r\n\r\nfunction MainContainer()\r\n{\r\n  const {rootState} = useContext(AuthContext);\r\n  const {isAuth} = rootState;\r\n\r\n  if(isAuth)\r\n  {\r\n    return <div id=\"PagesContainer\">\r\n    <Route path=\"/Home\" component={Home}/>\r\n    <Route path=\"/\"><Redirect to=\"/Home\" /></Route>\r\n    <Route path=\"/Dashboard\" component={DashboardSelector}/>\r\n    <Route path=\"/Tools\" component={Tools}/>\r\n    <Route path=\"/About\" component={About}/>\r\n    <Route path=\"/MyAccount\" component={MyAccount}/>\r\n    <Route path=\"/Login\"><Redirect to=\"/MyAccount\" /></Route>\r\n    <Route path=\"/Register\"><Redirect to=\"/MyAccount\" /></Route>\r\n    </div>;\r\n  }\r\n  else\r\n  {\r\n    return <div id=\"PagesContainer\">\r\n      <Route path=\"/Home\" component={Home}/>\r\n      <Route path=\"/\"><Redirect to=\"/Home\" /></Route>\r\n      <Route path=\"/Dashboard\" component={DashboardSelector}></Route>\r\n      <Route path=\"/Tools\" component={Tools}/>\r\n      <Route path=\"/About\" component={About}/>\r\n      <Route path=\"/Login\" component={Login}/>\r\n      <Route path=\"/Register\" component={Register}/>\r\n      <Route path=\"/MyAccount\"><Redirect to=\"/Login\" /></Route>\r\n    </div>;\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthContextProvider>\r\n      <HashRouter>\r\n        <div className=\"App\">\r\n          <GlobalHeader/>\r\n          <MainContainer/>\r\n        </div>\r\n      </HashRouter>\r\n    </AuthContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}